//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <PhotosUICore/PXChangeObserver-Protocol.h>
#import <PhotosUICore/PXDiagnosticsEnvironment-Protocol.h>
#import <PhotosUICore/PXPhotosDataSourceChangeObserver-Protocol.h>
#import <PhotosUICore/PXPhotosDetailsHeaderTileLayoutDelegate-Protocol.h>
#import <PhotosUICore/PXReusableObjectPoolDelegate-Protocol.h>
#import <PhotosUICore/PXSlideshowSessionDelegate-Protocol.h>
#import <PhotosUICore/PXTileSource-Protocol.h>
#import <PhotosUICore/PXTilingControllerTransitionDelegate-Protocol.h>
#import <PhotosUICore/PXTilingControllerZoomAnimationCoordinatorDelegate-Protocol.h>
#import <PhotosUICore/PXUISlideshowViewTileDelegate-Protocol.h>
#import <PhotosUICore/PXUIWidget-Protocol.h>
#import <PhotosUICore/PXZoomAnimationObserverCoordinatorDelegate-Protocol.h>
#import <PhotosUICore/UIGestureRecognizerDelegate-Protocol.h>

@class NSMutableSet, NSString, OKPresentationViewController, PHFetchResult, PXBasicUIViewTileAnimator, PXImageRequester, PXMemoryInfo, PXMovieProvider, PXOneUpPresentation, PXPhotoKitUIMediaProvider, PXPhotosDataSource, PXPhotosDetailsContext, PXPhotosDetailsHeaderSpec, PXPhotosDetailsHeaderSpecManager, PXPhotosDetailsLoadCoordinationToken, PXReusableObjectPool, PXSectionedSelectionManager, PXSlideshowSession, PXTilingController, PXUIPlayButtonTile, PXUISlideshowViewTile, PXWidgetSpec;
@protocol OS_dispatch_queue, PXAnonymousView, PXWidgetDelegate;

@interface PXPhotosDetailsHeaderTileWidget : NSObject <PXTileSource, PXTilingControllerTransitionDelegate, PXReusableObjectPoolDelegate, UIGestureRecognizerDelegate, PXChangeObserver, PXPhotosDataSourceChangeObserver, PXPhotosDetailsHeaderTileLayoutDelegate, PXSlideshowSessionDelegate, PXTilingControllerZoomAnimationCoordinatorDelegate, PXUISlideshowViewTileDelegate, PXZoomAnimationObserverCoordinatorDelegate, PXUIWidget, PXDiagnosticsEnvironment>
{
    NSObject<OS_dispatch_queue> *_internalWorkQueue;
    PXPhotosDetailsHeaderSpecManager *_specManager;
    PXTilingController *_tilingController;
    PXPhotoKitUIMediaProvider *_mediaProvider;
    PXReusableObjectPool *_tilePool;
    NSMutableSet *_tilesInUse;
    PXBasicUIViewTileAnimator *_tileAnimator;
    PXImageRequester *_primaryAssetImageRequester;
    struct CGRect _keyAssetCropRect;
    PXMemoryInfo *_entryInfo;
    PXSlideshowSession *_slideshowSession;
    _Bool __basicContentLoaded;
    _Bool __canLoadContentData;
    _Bool __slideshowDidPrepare;
    _Bool __slideshowDidStart;
    _Bool __slideshowStartingDelayFinished;
    _Bool __hostingViewDidAppear;
    _Bool _hasLoadedContentData;
    _Bool __showPlaceholder;
    PXPhotosDetailsContext *_context;
    id <PXWidgetDelegate> _widgetDelegate;
    PXWidgetSpec *_spec;
    PXPhotosDataSource *__photosDataSource;
    PXPhotosDetailsHeaderSpec *__headerSpec;
    PXMovieProvider *__movieProvider;
    OKPresentationViewController *__slideshowViewController;
    PXUISlideshowViewTile *__slideshowTile;
    PXUIPlayButtonTile *__playButtonTile;
    PXPhotosDetailsLoadCoordinationToken *__loadCoordinationToken;
    PHFetchResult *__keyAssetsFetchResult;
    long long __transitionAnimationsCount;
}

@property(nonatomic, setter=_setShowPlaceholder:) _Bool _showPlaceholder; // @synthesize _showPlaceholder=__showPlaceholder;
@property(nonatomic, setter=_setHasLoadedContentData:) _Bool hasLoadedContentData; // @synthesize hasLoadedContentData=_hasLoadedContentData;
@property(nonatomic, setter=_setTransitionAnimationsCount:) long long _transitionAnimationsCount; // @synthesize _transitionAnimationsCount=__transitionAnimationsCount;
@property(nonatomic, setter=_setHostingViewDidAppear:) _Bool _hostingViewDidAppear; // @synthesize _hostingViewDidAppear=__hostingViewDidAppear;
@property(retain, nonatomic, setter=_setKeyAssetsFetchResult:) PHFetchResult *_keyAssetsFetchResult; // @synthesize _keyAssetsFetchResult=__keyAssetsFetchResult;
@property(retain, nonatomic, setter=_setLoadCoordinationToken:) PXPhotosDetailsLoadCoordinationToken *_loadCoordinationToken; // @synthesize _loadCoordinationToken=__loadCoordinationToken;
@property(nonatomic, setter=_setSlideshowStartingDelayFinished:) _Bool _slideshowStartingDelayFinished; // @synthesize _slideshowStartingDelayFinished=__slideshowStartingDelayFinished;
@property(nonatomic, setter=_setSlideshowDidStart:) _Bool _slideshowDidStart; // @synthesize _slideshowDidStart=__slideshowDidStart;
@property(nonatomic, setter=_setSlideshowDidPrepare:) _Bool _slideshowDidPrepare; // @synthesize _slideshowDidPrepare=__slideshowDidPrepare;
@property(nonatomic, setter=_setCanLoadContentData:) _Bool _canLoadContentData; // @synthesize _canLoadContentData=__canLoadContentData;
@property(nonatomic, getter=_isBasicContentLoaded, setter=_setBasicContentLoaded:) _Bool _basicContentLoaded; // @synthesize _basicContentLoaded=__basicContentLoaded;
@property(retain, nonatomic, setter=_setPlayButtonTile:) PXUIPlayButtonTile *_playButtonTile; // @synthesize _playButtonTile=__playButtonTile;
@property(retain, nonatomic, setter=_setSlideshowTile:) PXUISlideshowViewTile *_slideshowTile; // @synthesize _slideshowTile=__slideshowTile;
@property(retain, nonatomic, setter=_setSlideshowViewController:) OKPresentationViewController *_slideshowViewController; // @synthesize _slideshowViewController=__slideshowViewController;
@property(retain, nonatomic, setter=_setMovieProvider:) PXMovieProvider *_movieProvider; // @synthesize _movieProvider=__movieProvider;
@property(retain, nonatomic, setter=_setHeaderSpec:) PXPhotosDetailsHeaderSpec *_headerSpec; // @synthesize _headerSpec=__headerSpec;
@property(retain, nonatomic, setter=_setPhotosDataSource:) PXPhotosDataSource *_photosDataSource; // @synthesize _photosDataSource=__photosDataSource;
@property(retain, nonatomic) PXWidgetSpec *spec; // @synthesize spec=_spec;
@property(nonatomic) __weak id <PXWidgetDelegate> widgetDelegate; // @synthesize widgetDelegate=_widgetDelegate;
@property(retain, nonatomic) PXPhotosDetailsContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)zoomAnimationObserverCoordinator:(id)arg1 animationDidEndWithContext:(id)arg2;
- (void)zoomAnimationObserverCoordinator:(id)arg1 animationWillBeginWithContext:(id)arg2;
- (id)px_diagnosticsItemProvidersForPoint:(struct CGPoint)arg1 inCoordinateSpace:(id)arg2;
- (void)tilingControllerZoomAnimationCoordinator:(id)arg1 enumerateTilesToAnimateInLayerWithType:(long long)arg2 layout:(id)arg3 zoomAnimationContext:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (id)slideshowViewTileHostViewController:(id)arg1;
- (void)widgetHostingViewDidAppear:(_Bool)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1 forCoordinateSpace:(id)arg2;
- (id)zoomAnimationCoordinatorForContext:(id)arg1;
- (void)preloadWithSourceRegionOfInterest:(id)arg1 forContext:(id)arg2;
- (id)regionOfInterestForContext:(id)arg1;
- (void)slideshowSession:(id)arg1 didPrepareSlideshow:(id)arg2;
- (id)photosDetailsHeaderTileLayoutFontFamilyName:(id)arg1;
- (struct CGRect)photosDetailsHeaderTileLayout:(id)arg1 contentsRectForAspectRatio:(double)arg2;
- (void)photosDataSource:(id)arg1 didChange:(id)arg2;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)_isPointWithinCurrentLayoutBounds:(struct CGPoint)arg1;
- (id)tilingController:(id)arg1 transitionAnimationCoordinatorForChange:(id)arg2;
- (id)tilingController:(id)arg1 tileIdentifierConverterForChange:(id)arg2;
- (id)_subtitle;
- (id)_title;
- (void *)_tileForIdentifier:(struct PXTileIdentifier)arg1 layout:(id)arg2;
- (void)checkInTile:(void *)arg1 withIdentifier:(struct PXTileIdentifier)arg2;
- (void *)checkOutTileForIdentifier:(struct PXTileIdentifier)arg1 layout:(id)arg2;
- (id)createHeaderSnapshotViewForMemoryCreationAnimation;
- (id)_contentRegionOfInterestForTileWithIdentifier:(struct PXTileIdentifier)arg1;
- (struct CGRect)_contentRectInCoordinateSpace:(id)arg1 withIdentifier:(struct PXTileIdentifier)arg2;
- (void)_startMiroMovie:(id)arg1;
- (id)_scrollViewController;
- (id)extendedTraitCollection;
@property(readonly, nonatomic) NSString *localizedTitle;
@property(readonly, nonatomic) long long contentLayoutStyle;
@property(readonly, nonatomic) PXTilingController *contentTilingController;
@property(readonly, nonatomic) _Bool hasContentForCurrentInput;
- (double)preferredContentHeightForWidth:(double)arg1;
- (void)_headerSpecDidChange;
- (void)_startSlideshowIfReady;
- (_Bool)_isSlideShowReadyToStart;
- (void)_slideshowStartingDelayDidFinish;
- (void)_updateSlideshowTile;
- (id)viewToBeFocused;
- (void)_didFinishPreparingSlideshowSession:(id)arg1;
- (void)_prepareSlideshowSessionWithAssetCollection:(id)arg1 keyAsset:(id)arg2;
- (void)_updateSlideshow;
- (void)_filterOutVideosFromAssetCollection:(id)arg1 filteredAssetCollection:(id *)arg2 assets:(id *)arg3;
- (id)_assetCollection;
- (void)_updateMovieProvider;
- (void)loadContentData;
- (void)_updateBasicContent;
- (void)_updateLayoutStyle;
- (void)setContentSize:(struct CGSize)arg1;
- (void)_loadBasicContent;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) _Bool allowUserInteractionWithSubtitle;
@property(readonly, nonatomic) NSObject<PXAnonymousView> *contentView;
@property(readonly, nonatomic) long long contentViewAnchoringType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isFaceModeEnabled) _Bool faceModeEnabled;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSString *localizedCaption;
@property(readonly, nonatomic) NSString *localizedDisclosureTitle;
@property(readonly, nonatomic) NSString *localizedSubtitle;
@property(retain, nonatomic) PXOneUpPresentation *oneUpPresentation;
@property(nonatomic, getter=isSelecting) _Bool selecting;
@property(readonly, nonatomic) PXSectionedSelectionManager *selectionManager;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool supportsFaceMode;
@property(readonly, nonatomic) _Bool supportsSelection;

@end

