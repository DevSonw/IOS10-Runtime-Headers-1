//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class CKPreviewDispatchCache, IMBalloonPlugin, NSArray, NSCache, NSDictionary, NSMutableDictionary, NSString;

@interface CKBalloonPluginManager : NSObject
{
    NSString *_lastLaunchedIdentifier;
    IMBalloonPlugin *_lastViewedPlugin;
    NSDictionary *_pluginEnabledMap;
    NSDictionary *_pluginOrderingMap;
    NSDictionary *_pluginVersionMap;
    NSDictionary *_pluginSeenMap;
    NSDictionary *_pluginLaunchTimeMap;
    NSArray *_browserPlugins;
    CKPreviewDispatchCache *_snapshotCache;
    NSMutableDictionary *_activeBrowsers;
    NSCache *_browserSnapshots;
}

+ (id)recentPlugin;
+ (id)sharedInstance;
@property(retain, nonatomic) NSCache *browserSnapshots; // @synthesize browserSnapshots=_browserSnapshots;
@property(retain, nonatomic) NSMutableDictionary *activeBrowsers; // @synthesize activeBrowsers=_activeBrowsers;
@property(retain, nonatomic) CKPreviewDispatchCache *snapshotCache; // @synthesize snapshotCache=_snapshotCache;
@property(retain, nonatomic) NSArray *browserPlugins; // @synthesize browserPlugins=_browserPlugins;
@property(retain, nonatomic) NSDictionary *pluginLaunchTimeMap; // @synthesize pluginLaunchTimeMap=_pluginLaunchTimeMap;
@property(retain, nonatomic) NSDictionary *pluginSeenMap; // @synthesize pluginSeenMap=_pluginSeenMap;
@property(retain, nonatomic) NSDictionary *pluginVersionMap; // @synthesize pluginVersionMap=_pluginVersionMap;
@property(retain, nonatomic) NSDictionary *pluginOrderingMap; // @synthesize pluginOrderingMap=_pluginOrderingMap;
@property(retain, nonatomic) NSDictionary *pluginEnabledMap; // @synthesize pluginEnabledMap=_pluginEnabledMap;
@property(nonatomic) __weak IMBalloonPlugin *lastViewedPlugin; // @synthesize lastViewedPlugin=_lastViewedPlugin;
@property(retain, nonatomic) NSString *lastLaunchedIdentifier; // @synthesize lastLaunchedIdentifier=_lastLaunchedIdentifier;
- (void).cxx_destruct;
- (unsigned long long)unseenPluginCount;
- (void)_setSeen:(_Bool)arg1 forPlugin:(id)arg2;
- (void)setSeen:(_Bool)arg1 forPlugin:(id)arg2;
- (_Bool)isPluginSeen:(id)arg1;
- (unsigned long long)badgeValueForPlugin:(id)arg1;
- (id)launchTimeForPlugin:(id)arg1;
- (void)updateLaunchTimeForPlugin:(id)arg1;
- (id)lastLaunchedPlugin;
- (long long)lastViewedPluginIndex;
- (void)updateLaunchStatus:(unsigned long long)arg1 forPlugin:(id)arg2;
- (unsigned long long)launchStatusForPlugin:(id)arg1;
@property(readonly, nonatomic) NSArray *disabledPlugins;
- (id)allPluginsPassingTest:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSArray *visibleSwitcherPlugins;
@property(readonly, nonatomic) NSArray *visiblePlugins;
@property(readonly, nonatomic) NSArray *allEnabledPlugins;
@property(readonly, nonatomic) NSArray *allPlugins;
- (_Bool)isInternalPlugin:(id)arg1;
- (id)pluginForIdentifier:(id)arg1;
- (_Bool)isPluginEnabled:(id)arg1;
- (void)saveWithNotification:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1 forPlugin:(id)arg2;
- (void)_removeAppWithBalloonIdentifier:(id)arg1;
- (_Bool)_shouldUninstallContainingBundle:(id)arg1;
- (void)updateOrdering:(id)arg1 withNotification:(_Bool)arg2;
- (void)updateOrderingForPlugins:(id)arg1;
- (void)updateOrderingForPlugin:(id)arg1 toIndex:(unsigned long long)arg2;
- (void)healthStickerStatusChanged;
- (struct __CFString *)healthKitAchievementAvailabilityChangedNotification;
- (void)reloadInstalledApps:(id)arg1;
- (void)refreshPlugins;
- (void)_updatePluginOrderingMapWithPlugins:(id)arg1;
- (void)dealloc;
- (void)_loadBrowserViewControllers;
- (id)init;
- (id)viewControllerForPluginIdentifier:(id)arg1 dataSource:(id)arg2;
- (id)viewControllerForPluginIdentifier:(id)arg1;
- (id)newViewControllerForPluginIdentifier:(id)arg1 dataSource:(id)arg2;
- (void)updateSnapshotForBrowserViewController:(id)arg1 currentBounds:(struct CGRect)arg2;
- (id)browserSnapshotForKey:(id)arg1;
- (void)_invalidatePluginForKey:(id)arg1;
- (void)invalidateAllActivePlugins;
- (void)forceTearDownRemoteViews;
- (void)prepareForSuspend;
- (_Bool)isViewController:(id)arg1 fromPluginWithIdentifier:(id)arg2;
- (id)handwritingViewControllerWithPluginPayloads:(id)arg1;
- (id)digitalTouchViewControllerWithDataSource:(id)arg1;
- (id)existingPhotoBrowserViewController;
- (id)photosBrowserViewControllerWithPluginPayloads:(id)arg1;
- (void)invalidatePhotosPlugin;

@end

