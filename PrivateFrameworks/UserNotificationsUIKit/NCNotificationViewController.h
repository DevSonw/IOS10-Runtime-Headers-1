//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <UserNotificationsUIKit/NCNotificationCustomContentDelegate-Protocol.h>
#import <UserNotificationsUIKit/UIScrollViewDelegate-Protocol.h>

@class NCAnimationCoordinator, NCNotificationRequest, NSString, UIScrollView, _NCNotificationViewControllerView;
@protocol NCNotificationCustomContent, NCNotificationCustomContentProviding, NCNotificationStaticContentProviding, NCNotificationViewControllerDelegate, UIViewControllerTransitionCoordinator;

@interface NCNotificationViewController : UIViewController <UIScrollViewDelegate, NCNotificationCustomContentDelegate>
{
    _Bool _didQueryCanPan;
    _Bool _canPan;
    struct UIView *_lookView;
    _Bool _revealAdditionalContentOnPresentation;
    id <NCNotificationViewControllerDelegate> _delegate;
    NCNotificationRequest *_notificationRequest;
    id <NCNotificationStaticContentProviding> _staticContentProvider;
    id <NCNotificationCustomContentProviding> _customContentProvider;
    NCAnimationCoordinator *_contentSizeChangeAnimationCoordinator;
    id <UIViewControllerTransitionCoordinator> _activeTransitionCoordinator;
    UIScrollView *_scrollView;
    UIViewController<NCNotificationCustomContent> *_customContentProvidingViewController;
}

@property(retain, nonatomic, getter=_customContentProvidingViewController, setter=_setCustomContentProvidingViewController:) UIViewController<NCNotificationCustomContent> *customContentProvidingViewController; // @synthesize customContentProvidingViewController=_customContentProvidingViewController;
@property(readonly, nonatomic, getter=_scrollView) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic, getter=_activeTransitionCoordinator, setter=_setActiveTransitionCoordinator:) id <UIViewControllerTransitionCoordinator> activeTransitionCoordinator; // @synthesize activeTransitionCoordinator=_activeTransitionCoordinator;
@property(retain, nonatomic, getter=_contentSizeChangeAnimationCoordinator, setter=_setContentSizeChangeAnimationCoordinator:) NCAnimationCoordinator *contentSizeChangeAnimationCoordinator; // @synthesize contentSizeChangeAnimationCoordinator=_contentSizeChangeAnimationCoordinator;
@property(retain, nonatomic) id <NCNotificationCustomContentProviding> customContentProvider; // @synthesize customContentProvider=_customContentProvider;
@property(retain, nonatomic) id <NCNotificationStaticContentProviding> staticContentProvider; // @synthesize staticContentProvider=_staticContentProvider;
@property(nonatomic) _Bool revealAdditionalContentOnPresentation; // @synthesize revealAdditionalContentOnPresentation=_revealAdditionalContentOnPresentation;
@property(retain, nonatomic) NCNotificationRequest *notificationRequest; // @synthesize notificationRequest=_notificationRequest;
@property(nonatomic) __weak id <NCNotificationViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)succinctDescriptionBuilder;
- (id)succinctDescription;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)customContent:(id)arg1 forwardAction:(id)arg2 forNotification:(id)arg3 withUserInfo:(id)arg4;
- (void)contentProvider:(id)arg1 performAction:(id)arg2;
- (void)_askDelegateToExecuteAction:(id)arg1 withParameters:(id)arg2;
- (void)_updateScrollViewContentSize;
- (void)transitionManager:(id)arg1 shouldFinishInteractionWithCompletionBlock:(CDUnknownBlockType)arg2;
- (void)_executeDismissAction;
- (void)_executeDefaultAction;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)_performViewLayout;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (struct CGSize)preferredContentSize;
- (struct CGSize)_preferredCustomContentSizeForBounds;
- (struct CGSize)_preferredCustomContentSizeForSize:(struct CGSize)arg1;
- (void)_setPreferredCustomContentSize:(struct CGSize)arg1;
- (void)viewDidLoad;
- (void)_loadLookView;
- (void)loadView;
@property(readonly, nonatomic, getter=_notificationViewControllerView) _NCNotificationViewControllerView *notificationViewControllerView;
- (void)_configureScrollViewIfNecessary;
- (void)_updateWithProvidedCustomContent;
- (void)_updateWithProvidedStaticContent;
- (struct UIView *)_longLookView;
- (struct UIView *)_longLookViewIfLoaded;
- (struct UIView *)_longLookViewLoadingIfNecessary:(_Bool)arg1;
- (struct UIView *)_lookView;
- (struct UIView *)_lookViewIfLoaded;
- (struct UIView *)_lookViewLoadingIfNecessary:(_Bool)arg1;
- (void)presentLongLook:(CDUnknownBlockType)arg1;
- (_Bool)_canPan;
- (_Bool)acknowledgeAndDismissCustomContentProvidingViewControllerIfNecessary;
- (void)updateContent;
- (void)setHasUpdatedContent;
- (void)didReceiveNotificationRequest:(id)arg1;
- (void)_setupCustomContentProvider;
- (void)_setupStaticContentProvider;
- (void)reloadStaticContentProvider;
@property(readonly, nonatomic, getter=hasCommittedToPresentingCustomContentProvidingViewController) _Bool committedToPresentingCustomContentProvidingViewController;
@property(readonly, nonatomic, getter=_isPresentingCustomContentProvidingViewController) _Bool presentingCustomContentProvidingViewController;
- (id)_presentedLongLookViewController;
@property(readonly, nonatomic, getter=isDragging) _Bool dragging;
@property(readonly, nonatomic, getter=isShortLook) _Bool shortLook;
- (_Bool)_setNotificationRequest:(id)arg1;
- (_Bool)_setDelegate:(id)arg1;
- (id)initWithNotificationRequest:(id)arg1;
- (id)_initWithNotificationRequest:(id)arg1;
@property(readonly, nonatomic, getter=isLookStyleLongLook) _Bool lookStyleLongLook;
- (id)_initForLongLookWithNotificationRequest:(id)arg1;
- (_Bool)acknowledgeAndDismissLongLookIfNecessaryAnimated:(_Bool)arg1;
@property(readonly, nonatomic, getter=isLegacyShortLookContentRevealed) _Bool legacyShortLookContentRevealed;
@property(readonly, nonatomic, getter=isPresentingLongLook) _Bool presentingLongLook;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

