//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jul 30 2016 09:41:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

@class BSAuditToken, NSDate, NSMapTable, NSObject, NSString, NSTimer, UIImage, UIView, WGWidgetInfo, _WGBrokenWidgetView, _WGWidgetRemoteViewController;
@protocol NSCopying, OS_dispatch_queue, OS_dispatch_semaphore, WGWidgetHostingViewControllerDelegate, WGWidgetHostingViewControllerHost;

@interface WGWidgetHostingViewController : UIViewController
{
    _Bool _implementsPerformUpdate;
    _Bool _requestingRemoteViewController;
    _Bool _disconnectingRemoteViewController;
    _Bool _encodingLayerTree;
    _Bool _didRequestViewInset;
    _Bool _didUpdate;
    _Bool _blacklisted;
    WGWidgetInfo *_widgetInfo;
    id <WGWidgetHostingViewControllerDelegate> _delegate;
    id <WGWidgetHostingViewControllerHost> _host;
    long long _largestAvailableDisplayMode;
    long long _activeDisplayMode;
    NSString *_appBundleID;
    long long _requestState;
    NSObject<OS_dispatch_queue> *_proxyConnectionQueue;
    NSObject<OS_dispatch_queue> *_proxyDisconnectionQueue;
    NSObject<OS_dispatch_queue> *_proxyRequestQueue;
    NSObject<OS_dispatch_queue> *_diskWriteQueue;
    _WGWidgetRemoteViewController *_remoteViewController;
    id <NSCopying> _extensionRequest;
    UIView *_contentProvidingView;
    UIView *_snapshotView;
    NSTimer *_disconnectionTimer;
    NSObject<OS_dispatch_semaphore> *_viewWillAppearSemaphore;
    NSObject<OS_dispatch_semaphore> *_viewWillDisappearSemaphore;
    CDUnknownBlockType _remoteViewControllerDisconnectionHandler;
    NSDate *_lastUnanticipatedDisconnectionDate;
    NSMapTable *_openAppearanceTransactions;
    NSMapTable *_openActiveDisplayModeChangeTransactions;
    _WGBrokenWidgetView *_brokenView;
    CDUnknownBlockType _outstandingWidgetUpdateCompletionHandler;
}

+ (void)setWidgetSnapshotTimestampsEnabled:(_Bool)arg1;
+ (void)setWidgetLoggingEnabled:(_Bool)arg1;
@property(copy, nonatomic, getter=_outstandingWidgetUpdateCompletionHandler, setter=_setOutstandingWidgetUpdateCompletionHandler:) CDUnknownBlockType outstandingWidgetUpdateCompletionHandler; // @synthesize outstandingWidgetUpdateCompletionHandler=_outstandingWidgetUpdateCompletionHandler;
@property(retain, nonatomic, getter=_brokenView, setter=_setBrokenView:) _WGBrokenWidgetView *brokenView; // @synthesize brokenView=_brokenView;
@property(nonatomic, getter=_isBlacklisted, setter=_setBlacklisted:) _Bool blacklisted; // @synthesize blacklisted=_blacklisted;
@property(nonatomic, getter=_didUpdate, setter=_setDidUpdate:) _Bool didUpdate; // @synthesize didUpdate=_didUpdate;
@property(readonly, nonatomic, getter=_openActiveDisplayModeChangeTransactions) NSMapTable *openActiveDisplayModeChangeTransactions; // @synthesize openActiveDisplayModeChangeTransactions=_openActiveDisplayModeChangeTransactions;
@property(readonly, nonatomic, getter=_openAppearanceTransactions) NSMapTable *openAppearanceTransactions; // @synthesize openAppearanceTransactions=_openAppearanceTransactions;
@property(retain, nonatomic, getter=_lastUnanticipatedDisconnectionDate, setter=_setLastUnanticipatedDisconnectionDate:) NSDate *lastUnanticipatedDisconnectionDate; // @synthesize lastUnanticipatedDisconnectionDate=_lastUnanticipatedDisconnectionDate;
@property(copy, nonatomic, getter=_remoteViewControllerDisconnectionHandler, setter=_setRemoteViewControllerDisconnectionHandler:) CDUnknownBlockType remoteViewControllerDisconnectionHandler; // @synthesize remoteViewControllerDisconnectionHandler=_remoteViewControllerDisconnectionHandler;
@property(retain, nonatomic, getter=_viewWillDisappearSemaphore, setter=_setViewWillDisappearSemaphore:) NSObject<OS_dispatch_semaphore> *viewWillDisappearSemaphore; // @synthesize viewWillDisappearSemaphore=_viewWillDisappearSemaphore;
@property(retain, nonatomic, getter=_viewWillAppearSemaphore, setter=_setViewWillAppearSemaphore:) NSObject<OS_dispatch_semaphore> *viewWillAppearSemaphore; // @synthesize viewWillAppearSemaphore=_viewWillAppearSemaphore;
@property(nonatomic, getter=_disconnectionTimer, setter=_setDisconnectionTimer:) __weak NSTimer *disconnectionTimer; // @synthesize disconnectionTimer=_disconnectionTimer;
@property(nonatomic, getter=_didRequestViewInset, setter=_setDidRequestViewInset:) _Bool didRequestViewInset; // @synthesize didRequestViewInset=_didRequestViewInset;
@property(nonatomic, getter=_isEncodingLayerTree, setter=_setEncodingLayerTree:) _Bool encodingLayerTree; // @synthesize encodingLayerTree=_encodingLayerTree;
@property(nonatomic, getter=_isDisconnectingRemoteViewController, setter=_setDisconnectingRemoteViewController:) _Bool disconnectingRemoteViewController; // @synthesize disconnectingRemoteViewController=_disconnectingRemoteViewController;
@property(nonatomic, getter=_isRequestingRemoteViewController, setter=_setRequestingRemoteViewController:) _Bool requestingRemoteViewController; // @synthesize requestingRemoteViewController=_requestingRemoteViewController;
@property(retain, nonatomic, getter=_snapshotView, setter=_setSnapshotView:) UIView *snapshotView; // @synthesize snapshotView=_snapshotView;
@property(retain, nonatomic, getter=_contentProvidingView, setter=_setContentProvidingView:) UIView *contentProvidingView; // @synthesize contentProvidingView=_contentProvidingView;
@property(copy, nonatomic, getter=_extensionRequest, setter=_setExtensionRequest:) id <NSCopying> extensionRequest; // @synthesize extensionRequest=_extensionRequest;
@property(retain, nonatomic, getter=_remoteViewController, setter=_setRemoteViewController:) _WGWidgetRemoteViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(readonly, nonatomic, getter=_diskWriteQueue) NSObject<OS_dispatch_queue> *diskWriteQueue; // @synthesize diskWriteQueue=_diskWriteQueue;
@property(readonly, nonatomic, getter=_proxyRequestQueue) NSObject<OS_dispatch_queue> *proxyRequestQueue; // @synthesize proxyRequestQueue=_proxyRequestQueue;
@property(readonly, nonatomic, getter=_proxyDisconnectionQueue) NSObject<OS_dispatch_queue> *proxyDisconnectionQueue; // @synthesize proxyDisconnectionQueue=_proxyDisconnectionQueue;
@property(readonly, nonatomic, getter=_proxyConnectionQueue) NSObject<OS_dispatch_queue> *proxyConnectionQueue; // @synthesize proxyConnectionQueue=_proxyConnectionQueue;
@property(nonatomic) long long requestState; // @synthesize requestState=_requestState;
@property(copy, nonatomic) NSString *appBundleID; // @synthesize appBundleID=_appBundleID;
@property(nonatomic, setter=_setImplementsPerformUpdate:) _Bool implementsPerformUpdate; // @synthesize implementsPerformUpdate=_implementsPerformUpdate;
@property(readonly, nonatomic) long long activeDisplayMode; // @synthesize activeDisplayMode=_activeDisplayMode;
@property(readonly, nonatomic) long long largestAvailableDisplayMode; // @synthesize largestAvailableDisplayMode=_largestAvailableDisplayMode;
@property(nonatomic) __weak id <WGWidgetHostingViewControllerHost> host; // @synthesize host=_host;
@property(nonatomic) __weak id <WGWidgetHostingViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) WGWidgetInfo *widgetInfo; // @synthesize widgetInfo=_widgetInfo;
- (void).cxx_destruct;
- (id)description;
- (id)_cancelTouches;
- (void)widget:(id)arg1 didTerminateWithError:(id)arg2;
- (void)_disconnectRemoteViewControllerAndCoalesce:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_invalidateDisconnectionTimer;
- (void)_disconnectionTimerDidFire:(id)arg1;
- (void)_disconnectRemoteViewController:(CDUnknownBlockType)arg1;
- (void)_finishDisconnectingRemoteViewControllerWithError:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)handleReconnectionRequest:(id)arg1;
- (_Bool)_attemptReconnectionAfterUnanticipatedDisconnection;
- (_Bool)_canDisconnectRemoteViewController:(id *)arg1;
- (void)_requestRemoteViewController:(CDUnknownBlockType)arg1;
- (_Bool)_canRequestRemoteViewController:(id *)arg1;
- (void)_setLargestAvailableDisplayMode:(long long)arg1;
- (void)_handleRequestedViewHeight:(double)arg1 usingAutolayout:(_Bool)arg2 requestIdentifier:(id)arg3;
- (double)_updatePreferredContentSizeWithHeight:(double)arg1;
- (double)_validatedHeightForHeight:(double)arg1 enforcingDisplayMode:(_Bool)arg2;
- (double)_contentWidth;
- (struct UIEdgeInsets)_marginInsets;
- (struct CGSize)_maxSizeForDisplayMode:(long long)arg1;
- (void)_insertAppropriateContentView;
- (void)_insertRemoteViewAfterViewWillAppearWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)_canInsertRemoteView;
- (void)_insertContentProvidingSubview:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_endRequestState:(long long)arg1;
- (void)_loadSnapshotViewFromDiskIfNecessary:(CDUnknownBlockType)arg1;
- (void)_packageViewFromURL:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)_packageViewWithBlock:(CDUnknownBlockType)arg1 reply:(CDUnknownBlockType)arg2;
- (void)_captureLayerTree:(CDUnknownBlockType)arg1;
- (void)_invalidateSnapshotWithForce:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_setSnapshotView:(id)arg1 forLayoutMode:(long long)arg2;
- (void)_removeAllSnapshotsDueToIssue:(_Bool)arg1;
- (void)_removeItemAtURL:(id)arg1;
- (id)_widgetSnapshotURLForLayoutMode:(long long)arg1 ensuringDirectoryExists:(_Bool)arg2;
- (id)_snapshotIdentifierForLayoutMode:(long long)arg1;
- (void)_enqueueRemoteServiceRequest:(CDUnknownBlockType)arg1 withDescription:(id)arg2;
- (void)_enqueueRequest:(CDUnknownBlockType)arg1 inQueue:(id)arg2 trampolinedToMainQueue:(_Bool)arg3 withDescription:(id)arg4;
- (CDUnknownBlockType)_request:(CDUnknownBlockType)arg1 withDescription:(id)arg2 forQueue:(id)arg3 trampolinedToMainQueue:(_Bool)arg4;
- (void)_setupRequestQueue;
- (void)_updateWidgetWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)maximumHeightDidChangeForDisplayMode:(long long)arg1;
@property(readonly, nonatomic) __weak BSAuditToken *auditToken;
- (void)performUpdateWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)insertSnapshotWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)requestInsertionOfRemoteViewAfterViewWillAppearWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)invalidateCachedSnapshotWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_validateSnapshotViewForActiveLayoutMode;
- (void)captureSnapshotAndBeginDisappearanceTransitionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_disconnectRemoteViewControllerImmediatelyWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)disconnectRemoteViewControllerWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)connectRemoteViewControllerWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)synchronizePreferredContentSize;
- (void)setPreferredContentSize:(struct CGSize)arg1;
- (struct CGSize)preferredContentSize;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (void)viewDidLoad;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)_captureAndInsertSnapshotAndDisconnectRemoteViewControllerForDisappearanceTransitionWithCompletion:(CDUnknownBlockType)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_connectAndInsertRemoteViewForAppearanceTransitionWithCompletion:(CDUnknownBlockType)arg1 updateHandler:(CDUnknownBlockType)arg2;
- (CDUnknownBlockType)_completionHandlerForUpdateRequest;
- (void)_registerUpdateRequestCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)_hasOutstandingUpdateRequest;
- (void)_noteOutstandingUpdateRequest;
- (void)_endRemoteViewControllerAppearanceTransitionIfNecessary;
- (void)_endRemoteViewControllerAppearanceTransitionIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;
- (void)_beginRemoteViewControllerAppearanceTransitionIfNecessary:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_beginRemoteViewControllerAppearanceTransitionIfNecessary:(_Bool)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic, getter=isSnapshotLoaded) _Bool snapshotLoaded;
@property(readonly, nonatomic, getter=isRemoteViewVisible) _Bool remoteViewVisible;
- (_Bool)isLinkedOnOrAfterSystemVersion:(id)arg1;
@property(nonatomic) long long userSpecifiedDisplayMode;
- (void)setActiveDisplayMode:(long long)arg1;
@property(readonly, nonatomic) UIImage *settingsIcon;
@property(readonly, nonatomic) UIImage *icon;
@property(readonly, copy, nonatomic) NSString *displayName;
@property(readonly, copy, nonatomic) NSString *widgetIdentifier;
- (void)dealloc;
- (id)initWithWidgetInfo:(id)arg1 host:(id)arg2;

@end

